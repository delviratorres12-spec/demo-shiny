[{"name":"app.R","content":"# \r\n# library(shiny)\r\n# library(bslib)\r\n# library(dplyr)\r\n# library(ggplot2)\r\n# # library(ABACUS)\r\n# \r\n# ui <- page_fluid(\r\n#   theme = bs_theme(version = 5),\r\n#   h2(\"Selector de comida\"),\r\n#   selectInput(\"opcion\", \"¿Qué tipo?\",\r\n#               choices = c(\"Pedir\"=\"pedir\",\"Hacer en casa\"=\"hacer\"),\r\n#               selected = \"pedir\"),\r\n#   actionButton(\"nuevo\", \"Nuevo sorteo\"),\r\n#   plotOutput(\"graf\", height = 320)\r\n# )\r\n# \r\n# server <- function(input, output, session){\r\n#   \r\n#   # (Opcional) inicio aleatorio:\r\n#   # observe({ updateSelectInput(session, \"opcion\", selected = sample(c(\"pedir\",\"hacer\"), 1)) })\r\n#   \r\n#   simula <- function(op){\r\n#     opciones <- if (op == \"hacer\")\r\n#       c(\"Carne\",\"Pollo\",\"Pescado\")\r\n#     else\r\n#       c(\"Pizza\",\"Hamburguesa\",\"Sushi\",\"China\",\"Mexicana\",\"Alitas\")\r\n#     \r\n#     tibble(platillo = sample(opciones, 1000, TRUE)) |>\r\n#       count(platillo, name = \"freq\") |>\r\n#       mutate(es_max = freq == max(freq))\r\n#   }\r\n#   \r\n#   # Re-muestrea al cambiar opción o al hacer clic en el botón\r\n#   datos <- reactive({\r\n#     req(input$opcion %in% c(\"pedir\",\"hacer\"))\r\n#     input$nuevo\r\n#     simula(input$opcion)\r\n#   })\r\n#   \r\n#   output$graf <- renderPlot({\r\n#     datos() |>\r\n#     ggplot(aes(reorder(platillo, -freq), freq, fill = es_max)) +\r\n#       geom_col() +\r\n#       guides(fill = \"none\") +\r\n#       labs(x = NULL, y = \"Frecuencia\") +\r\n#       scale_fill_manual(values=c(\"grey90\",\"lightblue2\")) +\r\n#       theme_minimal(base_size = 14)\r\n#     \r\n#     # barplot(datos()$es_max,datos()$platillo)\r\n#     \r\n#   })\r\n# }\r\n# \r\n# shinyApp(ui, server)\r\n# \r\n\r\n\r\n\r\n\r\nlibrary(shiny)\r\nlibrary(bslib)\r\n\r\nui <- page_fluid(\r\n  theme = bs_theme(version = 5),\r\n  h2(\"Selector de comida\"),\r\n  selectInput(\"opcion\", \"¿Qué tipo?\",\r\n              choices = c(\"Pedir\"=\"pedir\",\"Hacer en casa\"=\"hacer\"),\r\n              selected = \"pedir\"),\r\n  actionButton(\"nuevo\", \"Nuevo sorteo\"),\r\n  plotOutput(\"graf\", height = 320)\r\n)\r\n\r\nserver <- function(input, output, session){\r\n  \r\n  simula <- function(op){\r\n    opciones <- if (op == \"hacer\")\r\n      c(\"Carne\",\"Pollo\",\"Pescado\")\r\n    else\r\n      c(\"Pizza\",\"Hamburguesa\",\"Sushi\",\"China\",\"Mexicana\",\"Alitas\")\r\n    \r\n    # Simulación en R base\r\n    platillos <- sample(opciones, 1000, replace = TRUE)\r\n    freqs <- table(platillos)\r\n    freqs <- sort(freqs, decreasing = TRUE)  # ordenar como en ggplot\r\n    \r\n    # Identificar máximo\r\n    es_max <- freqs == max(freqs)\r\n    \r\n    list(freqs = freqs, es_max = es_max)\r\n  }\r\n  \r\n  # Re-muestrea al cambiar opción o al hacer clic en el botón\r\n  datos <- reactive({\r\n    req(input$opcion %in% c(\"pedir\",\"hacer\"))\r\n    input$nuevo  # para reactivar\r\n    simula(input$opcion)\r\n  })\r\n  \r\n  output$graf <- renderPlot({\r\n    d <- datos()\r\n    colores <- ifelse(d$es_max, \"lightblue2\", \"grey90\")\r\n    \r\n    barplot(\r\n      d$freqs,\r\n      col = colores,\r\n      border = NA,\r\n      ylim = c(0, max(d$freqs) * 1.2),\r\n      ylab = \"Frecuencia\",\r\n      main = \"Resultados del sorteo\"\r\n    )\r\n  })\r\n}\r\n\r\nshinyApp(ui, server)\r\n\r\n# library(shinylive)\r\n# \r\n# # Exporta la app a HTML y recursos estáticos\r\n# shinylive::export(appdir = \"mi_app\", destdir = \"docs\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","type":"text"}]
